def min_jumps(arr):
    n = len(arr)
    if n <= 1:
        return 0
    
    # Initialize variables to keep track of the current end, farthest reachable index, and number of jumps
    end = 0
    farthest = 0
    jumps = 0
    
    for i in range(n - 1):
        # Update the farthest reachable index
        farthest = max(farthest, i + arr[i])
        # If we reach the end of the current range, we need to jump to the next range
        if i == end:
            jumps += 1
            end = farthest
            # If we cannot reach the next range, return -1
            if end >= n - 1:
                return jumps
    
    return jumps

# Test case
arr = [1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9]
print(min_jumps(arr))  # Output: 3
